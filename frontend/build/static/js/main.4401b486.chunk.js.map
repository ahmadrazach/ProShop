{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","actions/productActions.js","components/Paginate.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAILS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILS","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","className","Nav","Link","NavDropdown","title","name","Item","onClick","isAdmin","Footer","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","listProducts","pageNumber","listProductDetails","Paginate","Pagination","Array","keys","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","useParams","Row","sm","md","lg","ProductScreen","match","useState","qty","setQty","setRating","comment","setComment","params","navigate","useNavigate","successProductReview","errorProductReview","alert","ListGroup","description","countInStock","Form","Control","onChange","e","target","Button","disabled","length","review","createdAt","substring","onSubmit","productId","preventDefault","console","log","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","history","location","useLocation","search","Number","split","removeFromCartHandler","removeFromCart","rounded","vairant","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","psotalCode","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","Navigate","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","justifyContent","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","OrderListScreen","App","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4401b486.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST='PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS='PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL='PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST='PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS='PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL='PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST='PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS='PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL='PRODUCT_DELETE_FAIL'\r\n\r\n\r\nexport const PRODUCT_CREATE_REQUEST='PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS='PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL='PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET='PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST='PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS='PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL='PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET='PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST='PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS='PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL='PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET='PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST='PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS='PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL='PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM='CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM='CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS='CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD='CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST='USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS='USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL='USER_LOGIN_FAIL'\r\nexport const USER_LOGUT='USER_LOGUT'\r\n\r\n//for registration\r\nexport const USER_REGISTER_REQUEST='USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS='USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL='USER_REGISTER_FAIL'\r\n\r\n//for user profile\r\nexport const USER_DETAILS_REQUEST='USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS='USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL='USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET='USER_DETAILS_RESET'\r\n\r\n//for user profile updation\r\nexport const USER_UPDATE_PROFILE_REQUEST='USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS='USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL='USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET='USER_UPDATE_PROFILE_RESET'\r\n\r\n//for admin users access\r\nexport const USER_LIST_REQUEST='USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS='USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL='USER_LIST_FAIL'\r\nexport const USER_LIST_RESET='USER_LIST_RESET'\r\n\r\n//for deleting user by admin access\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST='ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS='ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAILS='ORDER_CREATE_FAILS'\r\n\r\nexport const ORDER_DETAILS_REQUEST='ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS='ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAILS='ORDER_DETAILS_FAILS'\r\n\r\nexport const ORDER_PAY_REQUEST='ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS='ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL='ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET='ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST='ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS='ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL='ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET='ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST='ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS='ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL='ORDER_LIST_FAIL'\r\nexport const ORDER_LIST_RESET='ORDER_LIST_RESET'\r\n\r\nexport const ORDER_DELIVER_REQUEST='ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS='ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL='ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET='ORDER_DELIVER_RESET'\r\n","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { productListReducer,\r\nproductDetailsReducer, \r\nproductDeleteReducer,\r\nproductCreateReducer,\r\nproductUpdateReducer,\r\nproductReviewCreateReducer,\r\nproductTopRatedReducer\r\n} from './reducers/productReducers';\r\nimport {cartReducers} from './reducers/cartReducers';\r\nimport {userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer} from './reducers/userReducers';\r\nimport { orderCreateReducer,orderDetialsReducer, orderPayReducer ,orderListMyReducer, orderListReducer, orderDeliverReducer} from './reducers/orderReducers';\r\n\r\nconst reducer=combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    productDelete:productDeleteReducer,\r\n    productCreate:productCreateReducer,\r\n    productUpdate:productUpdateReducer,\r\n    productReviewCreate:productReviewCreateReducer,\r\n    productTopRated:productTopRatedReducer,\r\n    cart:cartReducers,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile:userUpdateProfileReducer,\r\n    userList:userListReducer,\r\n    userDelete:userDeleteReducer,\r\n    userUpdate:userUpdateReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetialsReducer,\r\n    orderPay:orderPayReducer,\r\n    orderDeliver:orderDeliverReducer,\r\n    orderListMy:orderListMyReducer,\r\n    orderList:orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage=localStorage.getItem('cartItems')?\r\nJSON.parse(localStorage.getItem('cartItems')):[]\r\n\r\n//taking user info from storage\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n? JSON.parse(localStorage.getItem('userInfo')):null\r\n\r\n//checking if I have the shippinh address in my local storage\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n? JSON.parse(localStorage.getItem('shippingAddress')):{}\r\n\r\nconst initialState={\r\n    cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},\r\n    userLogin:{userInfo:userInfoFromStorage},\r\n}\r\n\r\nconst middleware=[thunk]\r\n\r\nconst store=createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;","import {PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer=(state={products:[]},action)=>{\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading:true,products:[]}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                products:action.payload.products,\r\n                pages:action.payload.pages,\r\n                page:action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer=(state={product:{reviews:[]}},action)=>{\r\n\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading:true,...state}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading:false,product:action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer=(state={},action)=>{\r\n\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading:false,success:true}\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productCreateReducer=(state={},action)=>{\r\n\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading:false,success:true,product:action.payload}\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer=(state={product:{}},action)=>{\r\n\r\n    switch(action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {loading:false,success:true,product:action.payload}\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {product:{}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer=(state={},action)=>{\r\n\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {loading:false,success:true}\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_TOP_REQUEST:\r\n        return { loading: true, products: [] }\r\n      case PRODUCT_TOP_SUCCESS:\r\n        return { loading: false, products: action.payload }\r\n      case PRODUCT_TOP_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }","import { CART_ADD_ITEM,CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\";\r\n\r\nexport const cartReducers = (state={cartItems:[],shippingAddress:{}},action) => {\r\n  switch(action.type){\r\n        case CART_ADD_ITEM:\r\n          const item=action.payload\r\n\r\n          const existItem=state.cartItems.find(x=>x.product===item.product)\r\n          if(existItem){\r\n              return{\r\n                  ...state,\r\n                  cartItems:state.cartItems.map(x=>x.product===existItem.product\r\n                    ? item:x)\r\n              }\r\n          }else{\r\n              return {\r\n                  ...state,\r\n                  cartItems:[...state.cartItems,item]\r\n              }\r\n          }\r\n          case CART_REMOVE_ITEM:\r\n              return{\r\n                  ...state,\r\n                  cartItems:state.cartItems.filter((x)=>x.product!==action.payload)\r\n              }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress:action.payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod:action.payload,\r\n            }\r\n          default:\r\n            return state\r\n  }\r\n\r\n}\r\n","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading:false,userInfo:action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case USER_LOGUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//reducer for the registration\r\nexport const userRegisterReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading:false,userInfo:action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//reducer for the userDetails\r\nexport const userDetailsReducer=(state={user:{}},action)=>{\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state,loading:true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading:false,user:action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case USER_DETAILS_RESET:\r\n            return {user:{}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//reducer for the userUpdateDetails\r\nexport const userUpdateProfileReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading:true}\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading:false,success:true,userInfo:action.payload}\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//reducer for the listUsers\r\nexport const userListReducer=(state={users:[]},action)=>{\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return {loading:true}\r\n        case USER_LIST_SUCCESS:\r\n            return {loading:false,users:action.payload}\r\n        case USER_LIST_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case USER_LIST_RESET:\r\n            return{users:[]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case USER_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_RESET:\r\n        return {\r\n          user: {},\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","import { ORDER_CREATE_FAILS, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_RESET, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAILS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_RESET, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\"\r\n\r\nexport const orderCreateReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success:true,\r\n                order:action.payload,\r\n            }\r\n        case ORDER_CREATE_FAILS:\r\n            return{\r\n                loading:false,\r\n                error:action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetialsReducer=(state={loading:true,orderItems:[],shippingAddress:[]},action)=>{\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                order:action.payload,\r\n            }\r\n        case ORDER_DETAILS_FAILS:\r\n            return{\r\n                loading:false,\r\n                error:action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return{\r\n                loading:true,\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success:true,\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return{\r\n                loading:false,\r\n                error:action.payload,\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer=(state={orders:[]},action)=>{\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return{\r\n                loading:true,\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                orders:action.payload,\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return{\r\n                loading:false,\r\n                error:action.payload,\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return{orders:[]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer=(state={orders:[]},action)=>{\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return{\r\n                loading:true,\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                orders:action.payload,\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return{\r\n                loading:false,\r\n                error:action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return{\r\n                loading:true,\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success:true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return{\r\n                loading:false,\r\n                error:action.payload,\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import axios from \"axios\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS,USER_LOGIN_FAIL, USER_LOGUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL} from \"../constants/userConstants\";\r\n\r\nexport const login=(email,password)=>async(dispatch)=>{\r\n    try{\r\n        //dispatch of USER_LOGIN_REQUEsT\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const {data}=await axios.post('/api/users/login',{email,password}\r\n        ,config\r\n        )\r\n        //dispatch of USER_LOGIN_SUCCESS\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout=()=>(dispatch)=>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGUT})\r\n    dispatch({type:USER_DETAILS_RESET})\r\n    dispatch({type:ORDER_LIST_MY_RESET})\r\n    dispatch({type:USER_LIST_RESET})\r\n}\r\n\r\nexport const register=(name,email,password)=>async(dispatch)=>{\r\n    try{\r\n        //dispatch of USER_LOGIN_REQUEsT\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST\r\n        })\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const {data}=await axios.post('/api/users',{name,email,password}\r\n        ,config\r\n        )\r\n        //dispatch of USER_REGISTER_SUCCESS\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n// for profileupdation\r\nexport const getUserDetails=(id)=>async(dispatch,getState)=>{\r\n    try{\r\n        //dispatch of USER_DETAILS_REQUEST\r\n        dispatch({\r\n            type:USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data}=await axios.get(`/api/users/${id}`,config\r\n        )\r\n        \r\n        //dispatch of USER_DETAILS_SUCCESS\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n// for profileupdation done\r\nexport const updateUserProfile=(user)=>async(dispatch,getState)=>{\r\n    try{\r\n        //dispatch of USER_UPDATE_PROFILE_REQUEST\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        //put request to update exisiting information\r\n        const {data}=await axios.put(`/api/users/profile`,user,config\r\n        )\r\n        \r\n        //dispatch of USER_DETAILS_SUCCESS\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// for accessing all users\r\nexport const listUsers=()=>async(dispatch,getState)=>{\r\n    try{\r\n        //dispatch of USER_UPDATE_PROFILE_REQUEST\r\n        dispatch({\r\n            type:USER_LIST_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        //get request to take exisiting information\r\n        const {data}=await axios.get(`/api/users`,config\r\n        )\r\n        \r\n        dispatch({\r\n            type:USER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_LIST_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//deleting users\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_DELETE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.delete(`/api/users/${id}`, config)\r\n  \r\n      dispatch({ type: USER_DELETE_SUCCESS })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: USER_DELETE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_UPDATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n  \r\n      dispatch({ type: USER_UPDATE_SUCCESS })\r\n  \r\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n  \r\n      dispatch({ type: USER_DETAILS_RESET })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: USER_UPDATE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }","import React from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Navbar,Nav,Container, NavDropdown} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {logout} from '../actions/userActions'\r\nconst Header=()=> {\r\n  \r\n  const dispatch=useDispatch()\r\n  //taking userstate from global\r\n  const userLogin=useSelector(state=>state.userLogin)\r\n  const {userInfo}=userLogin\r\n\r\n  \r\n  const logoutHandler=()=>{\r\n    dispatch(logout())\r\n  }\r\n  return (\r\n        <header>\r\n            <Navbar bg=\"dark\"  variant='dark' expand=\"lg\" collapseOnSelect>\r\n  <Container>\r\n    <LinkContainer to=\"/\">\r\n    <Navbar.Brand>ProShop</Navbar.Brand>\r\n    </LinkContainer>\r\n    \r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n      <Nav >\r\n      <LinkContainer to=\"/cart\">\r\n      <Nav.Link ><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>\r\n    </LinkContainer>\r\n    {\r\n      userInfo?(\r\n        <NavDropdown title={userInfo.name} id='username'>\r\n          <LinkContainer to='/profile'>\r\n            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n          </LinkContainer>\r\n        <NavDropdown.Item onClick={logoutHandler}>\r\n          Logout\r\n        </NavDropdown.Item>\r\n        </NavDropdown>\r\n      ):<LinkContainer to=\"/login\">\r\n      <Nav.Link><i className=\"fas fa-user\"></i> Sign In</Nav.Link>\r\n      </LinkContainer>\r\n    }\r\n    \r\n        {userInfo && userInfo.isAdmin &&(\r\n          <NavDropdown title='Admin' id='adminmenu'>\r\n          <LinkContainer to='/admin/userlist'>\r\n            <NavDropdown.Item>Users</NavDropdown.Item>\r\n          </LinkContainer>\r\n          <LinkContainer to='/admin/productlist'>\r\n            <NavDropdown.Item>Products</NavDropdown.Item>\r\n          </LinkContainer>\r\n          <LinkContainer to='/admin/orderlist'>\r\n            <NavDropdown.Item>Orders</NavDropdown.Item>\r\n          </LinkContainer>\r\n          </NavDropdown>\r\n        )}\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container,Col } from 'react-bootstrap';\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Col className=\"text-center py-3\">Copyright &copy; ProShop</Col>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value,text,color}) {\r\n    return (\r\n        <div className='rating'>\r\n           <span>\r\n               <i style={{color}} className={value>=1?'fas fa-star':value>=0.5?'fas fa-star-half-alt':'far fa-star'}/>\r\n           </span>\r\n           <span>\r\n               <i style={{color}} className={value>=2?'fas fa-star':value>=1.5?'fas fa-star-half-alt':'far fa-star'}/>\r\n           </span>\r\n           <span>\r\n               <i style={{color}} className={value>=3?'fas fa-star':value>=2.5?'fas fa-star-half-alt':'far fa-star'}/>\r\n           </span>\r\n           <span>\r\n               <i  style={{color}} className={value>=4?'fas fa-star':value>=3.5?'fas fa-star-half-alt':'far fa-star'}/>\r\n           </span>\r\n           <span>\r\n               <i style={{color}} className={value>=5?'fas fa-star':value>=4.5?'fas fa-star-half-alt':'far fa-star'}/>\r\n           </span>\r\n           <span> {text && text}</span>\r\n        </div>\r\n    )\r\n\r\n}\r\nRating.defaultProps={\r\n    color:'#FDCC0D',\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport {Link} from \"react-router-dom\";\r\nconst Product=({product})=> {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}` }>\r\n                <Card.Img src={product.image} variant='top'/>\r\n            </Link>\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}` }>\r\n                <Card.Title as='div'>\r\n                 <strong>{product.name}</strong>    \r\n                </Card.Title>\r\n            </Link>\r\n            <Card.Text as='div'>\r\n            <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n                />\r\n            </Card.Text>\r\n            <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Message=({variant,children})=>{\r\n    return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps={\r\n    variant:'info',\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nconst Loader=()=>{\r\n    return(\r\n        \r\n        <Spinner\r\n        animation='border'\r\n        role='status'\r\n        style={{\r\n            width:'100px',\r\n            height:'100px',\r\n            margin:'auto',\r\n            display:'block',\r\n\r\n        }}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts=(pageNumber='')=>async (dispatch)=>{\r\n    try{\r\n        dispatch({type:PRODUCT_LIST_REQUEST})\r\n\r\n        const {data}=await axios.get(`/api/products?pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type:PRODUCT_LIST_SUCCESS,\r\n            payload:data,\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:PRODUCT_LIST_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts=()=>async (dispatch)=>{\r\n    try{\r\n        dispatch({type:PRODUCT_TOP_REQUEST})\r\n\r\n        const {data}=await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type:PRODUCT_TOP_SUCCESS,\r\n            payload:data,\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:PRODUCT_TOP_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails=(id)=>async (dispatch)=>{\r\n    try{\r\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data}=await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload:data,\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct=(id)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        //put request to update exisiting information\r\n        await axios.delete(`/api/products/${id}`,config)\r\n        // console.log(data)\r\n\r\n        dispatch({\r\n            type:PRODUCT_DELETE_SUCCESS\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:PRODUCT_DELETE_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct=(id)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        //post request to create information\r\n        const {data}=await axios.post(`/api/products/`,{},config)\r\n        // console.log(data)\r\n\r\n        dispatch({\r\n            type:PRODUCT_CREATE_SUCCESS,\r\n            payload:data,\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:PRODUCT_CREATE_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct=(product)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        //put request to update existing information\r\n        const {data}=await axios.put(`/api/products/${product._id}`,product,config)\r\n        // console.log(data)\r\n\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_SUCCESS,\r\n            payload:data,\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview=(productId,review)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        console.log('frontend',review)\r\n        //post request to add information\r\n        await axios.post(`/api/products/${productId}/reviews`,review,config)\r\n        // console.log(data)\r\n\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({pages,page,isAdmin=false}) => {\r\n  return pages > 1 && (\r\n    <Pagination>\r\n        {[...Array(pages).keys()].map(x=>(\r\n            <LinkContainer key={x+1} to={!isAdmin?`/page/${x+1}`:`/admin/productlist/${x+1}`}>\r\n                <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n            </LinkContainer>\r\n        ))}\r\n    </Pagination>\r\n  )\r\n}\r\n\r\nexport default Paginate","import React,{useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Carousel,Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\n\r\nconst ProductCarousel = () => {\r\n\r\n    const dispatch=useDispatch()\r\n    \r\n    const productTopRated = useSelector((state) => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n    \r\n    useEffect(()=>{\r\n        dispatch(listTopProducts())\r\n    },[dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel","import React,{useEffect} from 'react'\r\nimport {Row,Col} from 'react-bootstrap';\r\nimport { useDispatch,useSelector} from 'react-redux';\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts } from '../actions/productActions';\r\nimport { useParams } from 'react-router-dom';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\n\r\nconst HomeScreen=()=> {\r\n  \r\n  const dispatch=useDispatch()\r\n  const params=useParams()\r\n  const pageNumber=params.pageNumber || 1\r\n\r\n  const productList=useSelector(state=>state.productList)\r\n  //destructuring the productList\r\n  const { loading,error,products,page,pages } =productList\r\n\r\n  \r\n\r\n  useEffect(()=>{\r\n    dispatch(listProducts(pageNumber))\r\n  },[dispatch,pageNumber])  \r\n  return (\r\n        <>\r\n          <ProductCarousel/>\r\n            <h1>Latest Products</h1>\r\n            {\r\n              loading?(\r\n                <Loader/>\r\n              ):error?(\r\n                <Message variant='danger'>{error}</Message>\r\n              ):\r\n              <>\r\n                <Row>\r\n                {products.map((product)=>(\r\n                    <Col key={product._id} sm={12} md={6} lg={4}>\r\n                    <Product product={product}/>\r\n                    </Col>\r\n                ))}\r\n              </Row>\r\n              <Paginate\r\n                pages={pages}\r\n                page={page}\r\n              />\r\n          </> \r\n          }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Link,useNavigate} from \"react-router-dom\"\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Row,Col,Image,ListGroup,Card,Button,Form} from \"react-bootstrap\";\r\nimport Rating from '../components/Rating';\r\nimport { useParams } from 'react-router';\r\nimport { listProductDetails,createProductReview } from '../actions/productActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\n\r\nconst ProductScreen=({match})=> {\r\n    //setting up quantity\r\n    const [qty,setQty]=useState(1)  \r\n    const [rating,setRating]=useState(0)  \r\n    const [comment,setComment]=useState(\"\")  \r\n    \r\n    //returns a reference to the dispatch function from the Redux store. You may use it to dispatch actions as needed.\r\n    const dispatch=useDispatch()\r\n\r\n    const params=useParams();\r\n\r\n    const navigate = useNavigate();\r\n    \r\n    //taking the product details state using useSelector\r\n    const productDetails=useSelector(state=>state.productDetails)\r\n    //destructing productDetails\r\n    const {loading,error,product}=productDetails\r\n    \r\n    \r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const {userInfo}=userLogin\r\n    \r\n    \r\n    const productReviewCreate=useSelector(state=>state.productReviewCreate)\r\n    const {success:successProductReview,error:errorProductReview}=productReviewCreate\r\n    \r\n    useEffect(()=>{\r\n        \r\n        if(successProductReview){\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(params.id))\r\n    },[dispatch,params,successProductReview])  \r\n\r\n    const addToCartHandler=()=>{\r\n        navigate(`/cart/${params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(params.id,{\r\n            rating,comment,\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n            <Link className=\"btn btn-light my-3\" to=\"/\">Go Back</Link>\r\n            {loading?<Loader/>:error?<Message variant='danger'>{error}</Message>:(\r\n                <>\r\n                <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid/>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>{product.name}</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Description: {product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                    Price:\r\n                                    </Col>\r\n                                    <Col>\r\n                                    <strong>${product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                    Status:\r\n                                    </Col>\r\n                                    <Col>\r\n                                    {product.countInStock>0?\"In Stock\":\"Out of Stock\"}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {\r\n                                product.countInStock>0 &&(\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Qty</Col>\r\n                                            <Col>\r\n                                                <Form.Control as='select' value={qty} onChange={(e)=>\r\n                                                setQty(e.target.value)}>\r\n                                                    {[...Array(product.countInStock).keys()].map(x=>(\r\n                                                        <option key={x+1} value={x+1}>\r\n                                                            {x+1}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                )\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                    Status:\r\n                                    </Col>\r\n                                    <Col>\r\n                                    {product.countInStock>0?\"In Stock\":\"Out of Stock\"}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button onClick={addToCartHandler} className=\"btn-block\" type=\"button\" disabled={product.countInStock===0}>\r\n                                    Add To Cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h2>Reviews</h2>\r\n                    {product.reviews.length===0 && <Message>No Reviews</Message>}\r\n                    <ListGroup variant='flush'>\r\n                        {product.reviews.map((review)=>(\r\n                            <ListGroup.Item key={review._id}>\r\n                                <strong>{review.name}</strong>\r\n                                <Rating value={review.rating}/>\r\n                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                <p>{review.comment}</p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    <ListGroup.Item>\r\n                        <h2>Write a Customer Review</h2>\r\n                        {errorProductReview && <Message variant='danger'>\r\n                            {errorProductReview}</Message>}\r\n                        {userInfo ? (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='rating'>\r\n                                    <Form.Label>Rating</Form.Label>\r\n                                    <Form.Control as='select' value={rating} onChange={(e)=>\r\n                                        setRating(e.target.value)}>\r\n                                        <option value=''>Select...</option>\r\n                                        <option value='1'>1 - Bad</option>\r\n                                        <option value='2'>2 - Fair</option>\r\n                                        <option value='3'>3 - Good</option>\r\n                                        <option value='4'>4 - Very Good</option>\r\n                                        <option value='5'>5 - Excellent</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='comment'>\r\n                                    <Form.Label>Comment</Form.Label>\r\n                                    <Form.Control\r\n                                        as='textarea'\r\n                                        row='3'\r\n                                        value={comment}\r\n                                        onChange={e=>setComment(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Button type='submit' variant='primary'>\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n                        ):(\r\n                            <Message>\r\n                                Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            </>\r\n            )}\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM,CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id,qty) => async(dispatch,getState)=>{\r\n\r\n    //taking data of the product\r\n    const {data}=await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            product:data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price,\r\n            countInStock:data.countInStock,\r\n            qty,\r\n        }\r\n    })\r\n localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))//Convert a JavaScript object into a string with JSON.stringify()\r\n}\r\n\r\nexport const removeFromCart=(id)=>(dispatch,getState)=>{\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:id,\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress=(data)=>(dispatch)=>{\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data,\r\n    })\r\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod=(data)=>(dispatch)=>{\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data,\r\n    })\r\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\r\n}","import React,{useEffect} from 'react'\r\nimport {Link,useParams,useLocation,useNavigate } from 'react-router-dom'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {Row,Col,ListGroup,Image,Form,Button,Card} from \"react-bootstrap\"\r\nimport Message from '../components/Message'\r\nimport { addToCart,removeFromCart } from '../actions/cartActions'\r\n\r\n const CartScreen = ({history}) => {\r\n    const params=useParams()\r\n    const productId=params.id\r\n\r\n    //  getting the quantity of product\r\n    const location=useLocation()\r\n    const qty=location.search?Number(location.search.split('=')[1]):1\r\n    //duspatch used to dispatch actions as needed.\r\n    const dispatch=useDispatch()\r\n\r\n    const cart=useSelector((state)=>state.cart)\r\n    const userDetails=useSelector(state=>state.userDetails)\r\n    const{cartItems}=cart\r\n    \r\n    const removeFromCartHandler=(id)=>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const navigate=useNavigate()\r\n    //to proceed to the checkout\r\n    const checkoutHandler=()=>{\r\n        if(!userDetails){\r\n            navigate('/login')\r\n         } else{\r\n            navigate('/shipping')\r\n         }\r\n    }\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId,qty))\r\n        }\r\n    },[dispatch,productId,qty])\r\n    \r\n   return (\r\n    <div>\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length===0?(\r\n                    <Message>\r\n                        Your cart is empty <Link to=\"/\">Go Back</Link>\r\n                    </Message>\r\n                ):(\r\n                    <ListGroup variant='flush'>\r\n                        {\r\n                            cartItems.map(item=>(\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={2}>$ {item.price}</Col>\r\n                                        <Col md={2}>\r\n                                            <Form.Control as='select' value={item.qty} onChange={(e)=>\r\n                                                   dispatch(addToCart(item.product,Number(e.target.value)))}>\r\n                                                        {[...Array(item.countInStock).keys()].map(x=>(\r\n                                                            <option key={x+1} value={x+1}>\r\n                                                                {x+1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                            </Form.Control>\r\n                                        </Col> \r\n                                        <Col md={2}>\r\n                                            <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={()=>removeFromCartHandler(item.product)}\r\n                                            >\r\n                                            <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                        \r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                        }\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup vairant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                Subtotal({cartItems.reduce((acc,item)=>acc+item.qty,0)}) items\r\n                            </h2>\r\n                            $\r\n                            {\r\n                                cartItems.reduce((acc,item)=>acc+item.qty*item.price,0).toFixed(2)\r\n                            }\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length===0}\r\n                            onClick={checkoutHandler}>\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport {Container,Row,Col} from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n  return (\r\n    <Container>\r\n        <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer","import React,{useState,useEffect} from 'react'\r\nimport {Link,useLocation,useNavigate} from 'react-router-dom'\r\nimport {Form,Button,Row,Col} from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {login} from '../actions/userActions'\r\n\r\n\r\nconst LoginScreen=()=> {\r\n\r\n    const [email,setEmail]=useState('')\r\n    const [password,setPassword]=useState('')\r\n\r\n    //taking the state of variables from global state\r\n    const dispatch=useDispatch()\r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const {loading,error,userInfo}=userLogin\r\n\r\n    const location=useLocation()\r\n    const redirect=location.search ? location.search.split('=')[1]:'/'\r\n    \r\n    const navigate = useNavigate();\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            navigate(redirect)\r\n        }\r\n    },[navigate,userInfo,redirect])\r\n    \r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(login(email,password))\r\n    }\r\n  return (\r\n    <FormContainer>\r\n        <h1>Sign In</h1>\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader/>}\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e)=>setEmail(e.target.value)}>\r\n\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e)=>setPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant='primary'>Sign In</Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            New Customer?{' '}\r\n            <Link to={redirect ? `/register?redirect=${redirect}`: `/register`}>\r\n                Register</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen","import React,{useState,useEffect} from 'react'\r\nimport {Link,useLocation,useNavigate} from 'react-router-dom'\r\nimport {Form,Button,Row,Col} from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {register} from '../actions/userActions'\r\n\r\n\r\nconst RegisterScreen=()=> {\r\n\r\n    const [name,setName]=useState('')\r\n    const [email,setEmail]=useState('')\r\n    const [password,setPassword]=useState('')\r\n    const [confirmPassword,setConfirmPassword]=useState('')\r\n    const [message,setMessage]=useState(null)\r\n\r\n    //taking the state of variables from global state\r\n    const dispatch=useDispatch()\r\n    const userRegister=useSelector(state=>state.userRegister)\r\n    const {loading,error,userInfo}=userRegister\r\n\r\n    const location=useLocation()\r\n    const redirect=location.search ? location.search.split('=')[1]:'/'\r\n    \r\n    const navigate = useNavigate();\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            navigate(redirect)\r\n        }\r\n    },[navigate,userInfo,redirect])\r\n    \r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        //DISPATCH REGISTER\r\n        if(password!==confirmPassword){\r\n            setMessage('Passwords don not match')\r\n        }\r\n        else{\r\n            dispatch(register(name,email,password))\r\n        }\r\n    }\r\n  return (\r\n    <FormContainer>\r\n        <h1>Sign Up</h1>\r\n        {error && <Message variant='danger'>{message}</Message>}\r\n        {loading && <Loader/>}\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                    type='name'\r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e)=>setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e)=>setEmail(e.target.value)}>\r\n\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e)=>setPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='confirmpassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e)=>setConfirmPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant='primary'>Register</Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Have an Account?{' '}\r\n            <Link to={redirect ? `/login?redirect=${redirect}`: `/login`}>\r\n                Login\r\n            </Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import React,{useState,useEffect} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {Table,Form,Button,Row,Col} from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getUserDetails, updateUserProfile} from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst ProfileScreen=()=> {\r\n\r\n    const [name,setName]=useState('')\r\n    const [email,setEmail]=useState('')\r\n    const [password,setPassword]=useState('')\r\n    const [confirmPassword,setConfirmPassword]=useState('')\r\n    const [message,setMessage]=useState(null)\r\n\r\n    //taking the state of variables from global state\r\n    const dispatch=useDispatch()\r\n    const userDetails=useSelector(state=>state.userDetails)\r\n    const {loading,error,user}=userDetails\r\n\r\n    \r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const {userInfo}=userLogin\r\n\r\n    const userUpdateProfile=useSelector(state=>state.userUpdateProfile)\r\n    const {success}=userUpdateProfile\r\n\r\n    const orderListMy=useSelector(state=>state.orderListMy)\r\n    const {loading:loadingOrders,error:errorOrders,orders}=orderListMy\r\n    \r\n    const navigate = useNavigate();\r\n    useEffect(()=>{\r\n        if(!userInfo){\r\n            navigate('/login')\r\n        }else{\r\n            if(!user.name){\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[dispatch,navigate,userInfo,user,orders,success])\r\n    \r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        //DISPATCH REGISTER\r\n        if(password!==confirmPassword){\r\n            setMessage('Passwords don not match')\r\n        }\r\n        else{\r\n            dispatch(updateUserProfile({id:user._id,name,email,password}))\r\n        }\r\n    }\r\n  return <Row>\r\n      <Col md={3}>\r\n      <h1>User Profile</h1>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader/>}\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                    type='name'\r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e)=>setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e)=>setEmail(e.target.value)}>\r\n\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e)=>setPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='confirmpassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e)=>setConfirmPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant='primary'>Update</Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n          <h2>My Orders</h2>\r\n          {\r\n            loadingOrders ? <Loader/>:errorOrders?<Message variant='danger'>\r\n            {errorOrders}</Message>:(\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th>ID</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            orders.map((order)=>(\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0,10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid?(\r\n                                        order.paidAt.substring(0,10)\r\n                                    ):(\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>{order.isDelivered?(\r\n                                        order.deliveredAt.substring(0,10)\r\n                                    ):(\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Detials</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            )\r\n            }\r\n      </Col>\r\n  </Row>\r\n}\r\n\r\nexport default ProfileScreen","import { ORDER_CREATE_FAILS, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAILS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\"\r\nimport axios from 'axios'\r\n\r\nexport const createOrder=(order)=>async(dispatch,getState)=>{\r\n    try{\r\n        //dispatch of ORDER_CREATE_REQUEST\r\n        dispatch({\r\n            type:ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        //put request to update exisiting information\r\n        const {data}=await axios.post(`/api/orders`,order,config)\r\n        \r\n        //dispatch of USER_DETAILS_SUCCESS\r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload:data,\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:ORDER_CREATE_FAILS,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails=(id)=>async(dispatch,getState)=>{\r\n    try{\r\n        //dispatch of ORDER_DETAILS_REQUEST\r\n        dispatch({\r\n            type:ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        //put request to update exisiting information\r\n        const {data}=await axios.get(`/api/orders/${id}`,config)\r\n        \r\n        //dispatch of USER_DETAILS_SUCCESS\r\n        dispatch({\r\n            type:ORDER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:ORDER_DETAILS_FAILS,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder=(orderId,paymentResult)=>async(dispatch,getState)=>{\r\n    try{\r\n        //dispatch of ORDER_PAY_REQUEST\r\n        dispatch({\r\n            type:ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        //put request to update exisiting information\r\n        const {data}=await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config\r\n        )\r\n        \r\n        //dispatch of USER_PAY_SUCCESS\r\n        dispatch({\r\n            type:ORDER_PAY_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:ORDER_PAY_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder=(order)=>async(dispatch,getState)=>{\r\n    try{\r\n\r\n        dispatch({\r\n            type:ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        \r\n        const {data}=await axios.put(`/api/orders/${order._id}/deliver`,{},config\r\n        )\r\n        \r\n        //dispatch of USER_PAY_SUCCESS\r\n        dispatch({\r\n            type:ORDER_DELIVER_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:ORDER_PAY_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders=()=>async(dispatch,getState)=>{\r\n    try{\r\n        //dispatch of ORDER_PAY_REQUEST\r\n        dispatch({\r\n            type:ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        //put request to update exisiting information\r\n        const {data}=await axios.get(`/api/orders/myorders`,config)\r\n        console.log(data)\r\n        //dispatch of USER_PAY_SUCCESS\r\n        dispatch({\r\n            type:ORDER_LIST_MY_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:ORDER_LIST_MY_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders=()=>async(dispatch,getState)=>{\r\n    try{\r\n        //dispatch of ORDER_PAY_REQUEST\r\n        dispatch({\r\n            type:ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        //getting userInfo from the state\r\n        const {userLogin:{userInfo}}=getState()\r\n\r\n        \r\n        const config={\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        //get request to see exisiting information\r\n        const {data}=await axios.get(`/api/orders`,config)\r\n        console.log('data',data)\r\n        //dispatch of USER_PAY_SUCCESS\r\n        dispatch({\r\n            type:ORDER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:ORDER_LIST_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message:error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {Nav } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({step1,step2,step3,step4}) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1?(\r\n                <LinkContainer to='/login'>\r\n                    <Nav.Link>Sign In</Nav.Link>\r\n                </LinkContainer>\r\n            ):(\r\n                <Nav.Link disabled>Sign In</Nav.Link>\r\n            )}\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            {step2?(\r\n                <LinkContainer to='/shipping'>\r\n                    <Nav.Link>Shipping</Nav.Link>\r\n                </LinkContainer>\r\n            ):(\r\n                <Nav.Link disabled>Shipping</Nav.Link>\r\n            )}\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            {step3?(\r\n                <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                </LinkContainer>\r\n            ):(\r\n                <Nav.Link disabled>Payment</Nav.Link>\r\n            )}\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            {step4?(\r\n                <LinkContainer to='/placeorder'>\r\n                    <Nav.Link>Place Order</Nav.Link>\r\n                </LinkContainer>\r\n            ):(\r\n                <Nav.Link disabled>Place Order</Nav.Link>\r\n            )}\r\n        </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React,{useState} from 'react'\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nconst ShippingScreen = () => {\r\n\r\n    const cart=useSelector(state=>state.cart)\r\n    const {shippingAddress}=cart\r\n\r\n    const [address,setAddress]=useState(shippingAddress.address)\r\n    const [city,setCity]=useState(shippingAddress.city)\r\n    const [postalCode,setPostalCode]=useState(shippingAddress.postalCode)\r\n    const [country,setCountry]=useState(shippingAddress.country)\r\n    \r\n    const navigate=useNavigate()\r\n    const dispatch=useDispatch()\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address,city,postalCode,country}))\r\n        navigate('/payment')\r\n    }\r\n  return (\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 />\r\n        <h1>Shipping</h1>\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter address'\r\n                    value={address}\r\n                    onChange={(e)=>setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter city'\r\n                    value={city}\r\n                    onChange={(e)=>setCity(e.target.value)}>\r\n                    </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Postal Code'\r\n                    value={postalCode}\r\n                    onChange={(e)=>setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Country'\r\n                    value={country}\r\n                    onChange={(e)=>setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n                Continue\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen","import React,{useState} from 'react'\r\nimport {Form,Button,Col} from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = () => {\r\n\r\n    const cart=useSelector(state=>state.cart)\r\n    const {shippingAddress}=cart\r\n    const navigate=useNavigate()\r\n    if(!shippingAddress)\r\n    {\r\n        navigate('/shipping')\r\n    }\r\n    const [paymentMethod,setPaymentMethod]=useState('PayPal')\r\n    \r\n    \r\n    const dispatch=useDispatch()\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n    \r\n  return (\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3/>\r\n        <h1>Payment Method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n                <Form.Label as='legend'>Select Method</Form.Label>\r\n            <Col>\r\n            <Form.Check\r\n            type='radio'\r\n            label='Paypal or Credit Card'\r\n            id='Paypal'\r\n            name='paymentMethod'\r\n            value='Paypal'\r\n            checked\r\n            onChange={(e)=>setPaymentMethod(e.target.value)}\r\n            >                \r\n            </Form.Check>\r\n            </Col>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n                Continue\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import React,{useEffect} from 'react'\r\nimport {Link } from 'react-router-dom'\r\nimport {Button,Row,Col,ListGroup,Image,Card} from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport Message from '../components/Message'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = () => {\r\n  \r\n    const dispatch =useDispatch();\r\n    const cart=useSelector((state)=>state.cart)\r\n\r\n    const navigate=useNavigate();\r\n\r\n    if (!cart.shippingAddress.address) {\r\n        navigate('/shipping')\r\n      } else if (!cart.paymentMethod) {\r\n        navigate('/payment')\r\n      }\r\n    //calculate pricing\r\n    const addDecimals=(num)=>{\r\n        return (Math.round(num*100)/100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n    const {order,success,error}=orderCreate\r\n\r\n    \r\n    useEffect(()=>{\r\n        if(success){\r\n            navigate(`/order/${order._id}`)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[navigate, success])// eslint-disable-next-line\r\n\r\n    const placeOrderHandler=()=>{\r\n        dispatch(\r\n            createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice,\r\n              })\r\n        )\r\n    }\r\n    return (\r\n    <>\r\n        <CheckoutSteps step1 step2 step3 step4/>\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p>\r\n                            <strong>Address: </strong>\r\n                            {cart.shippingAddress.address},{cart.shippingAddress.city}{''}\r\n                            {cart.shippingAddress.psotalCode},{''}\r\n                            {cart.shippingAddress.country}\r\n                        </p>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Items</h2>\r\n                            {cart.cartItems.length===0?<Message>Your cart is empty</Message>:(\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item,index)=>(\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                <Link to ={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price}=${item.qty*item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' \r\n                            disabled={cart.cartItems===0} onClick={placeOrderHandler}>PLace Order</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React,{useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport {Link,Navigate,useParams } from 'react-router-dom'\r\nimport {Row,Col,ListGroup,Image,Card,Button} from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { getOrderDetails, payOrder,deliverOrder} from '../actions/orderActions'\r\nimport Loader from '../components/Loader'\r\nimport { ORDER_PAY_RESET,ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = () => {\r\n  \r\n    const params=useParams();\r\n    const orderId=params.id;\r\n\r\n    const [sdkReady,setSdkReady]=useState(false)\r\n    const dispatch =useDispatch();\r\n    // const cart=useSelector((state)=>state.cart)\r\n    \r\n    \r\n    const orderDetails=useSelector(state=>state.orderDetails)\r\n    const {order,loading,error}=orderDetails\r\n\r\n    const orderPay=useSelector(state=>state.orderPay)\r\n    const {loading:loadingPay,success:successPay}=orderPay\r\n    \r\n    const orderDeliver=useSelector(state=>state.orderDeliver)\r\n    const {loading:loadingDeliver,success:successDeliver}=orderDeliver\r\n    \r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const {userInfo}=userLogin\r\n\r\n    //calculate pricing\r\n    if(!loading){\r\n        const addDecimals=(num)=>{\r\n            return (Math.round(num*100)/100).toFixed(2)\r\n        }\r\n        order.itemsPrice=addDecimals(\r\n            order.orderItems.reduce((acc,item)=>acc+item.price*item.qty,0)\r\n        )\r\n    }\r\n    \r\n    \r\n    // cart.shippingPrice=addDecimals(cart.itemsPrice>100?0:100)\r\n    // cart.taxPrice=addDecimals(Number((0.15*cart.itemsPrice).toFixed(2)))\r\n    // cart.totalPrice=(Number(cart.itemsPrice)+Number(cart.shippingPrice)+\r\n    // Number(cart.taxPrice)).toFixed()\r\n\r\n\r\n \r\n    useEffect(()=>{\r\n\r\n        if(!userInfo)\r\n            Navigate('/login')\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n              setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n          }\r\n\r\n       \r\n        if(!order||successPay || successDeliver){\r\n            dispatch({type:ORDER_PAY_RESET})\r\n            dispatch({type:ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n        else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n        \r\n    },[dispatch,orderId,successPay,order,successDeliver,userInfo])\r\n\r\n\r\n    const successPaymentHandler=(paymentResult)=>{\r\n        console.log('in successPaymentHandler')\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId,paymentResult))\r\n    }\r\n\r\n    const deliverHandler=()=>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n    return loading \r\n    ? <Loader/>\r\n    :error\r\n    ?<Message variant='danger'>{error}</Message>\r\n    :<>\r\n    <h1>Order : {order._id}</h1>\r\n    <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p>\r\n                        <strong>Name: </strong>{order.user.name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong>{' '}\r\n                            <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                        </p>\r\n                        <p>\r\n                            <strong>Address: </strong>\r\n                            {order.shippingAddress.address},{order.shippingAddress.city}{''}\r\n                            {order.shippingAddress.psotalCode},{''}\r\n                            {order.shippingAddress.country}\r\n                        </p>\r\n                        {order.isDelivered ?( <Message variant='success'>Delivered on {order.deliveredAt}</Message>)\r\n                        :(<Message variant='danger'>Not Delivered</Message>)}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                        </p>\r\n                        {order.isPaid ?( <Message variant='success'>Paid on {order.paidAt}</Message>)\r\n                        :(<Message variant='danger'>Not Paid</Message>)}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Items</h2>\r\n                            {order.orderItems.length===0?<Message>Order is empty</Message>:(\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item,index)=>(\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                <Link to ={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price}=${item.qty*item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${order.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        {!order.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loader/>}\r\n                                {!sdkReady?(\r\n                                    <Loader/>\r\n                                ):(\r\n                                    <PayPalButton\r\n                                    amount={order.totalPrice}\r\n                                    onSuccess={successPaymentHandler}\r\n                                    />\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )}\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered &&(\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliverHandler}\r\n                                >Mark As Delivered</Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen","import React,{useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table,Button} from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers,deleteUser } from '../actions/userActions'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst UserListScreen = () => {\r\n\r\n    const dispatch=useDispatch()\r\n    const navigate=useNavigate()\r\n\r\n    const userList=useSelector(state=>state.userList)\r\n    const {loading,error,users}=userList\r\n\r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const {userInfo}=userLogin\r\n\r\n    const userDelete=useSelector(state=>state.userDelete)\r\n    const {success:successDelete}=userDelete\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin)\r\n        dispatch(listUsers())\r\n        else\r\n        navigate('/login')\r\n        \r\n    },[dispatch,navigate,userInfo,successDelete])\r\n\r\n    const deleteHandler=(id)=>{\r\n        if(window.confirm('Are you sure ?'))\r\n        dispatch(deleteUser(id))\r\n    }\r\n  return (\r\n    <>\r\n        <h1>Users</h1>\r\n        {loading?<Loader/>:\r\n        error?<Message variant='danger'>{error}</Message>:\r\n        (<Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>NAME</th>\r\n                    <th>EMAIL</th>\r\n                    <th>ADMIN</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {users.map((user)=>(\r\n                    <tr key={user._id}>\r\n                        <td>{user._id}</td>\r\n                        <td>{user.name}</td>\r\n                        <td>\r\n                            <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                        </td>\r\n                        <td>\r\n                            {user.isAdmin?(\r\n                                <i className='fas fa-check' style={{color:'green'}}></i>\r\n                            ):(\r\n                                <i className='fas fa-times' style={{color:'red'}}></i>\r\n                            )}\r\n                        </td>\r\n                        <td>\r\n                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                <Button variant='light' className='btn-sm'>\r\n                                    <i className='fas fa-edit'></i>\r\n                                </Button>\r\n                            </LinkContainer>\r\n                            <Button\r\n                                variant='danger'\r\n                                className='btn-sm'\r\n                                onClick={()=>deleteHandler(user._id)}\r\n                            >\r\n                                <i className='fas fa-trash'></i>\r\n\r\n                            </Button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table>)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match }) => {\r\n  const navigate=useNavigate()\r\n  const params=useParams()\r\n    const userId = params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      navigate('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, navigate, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React,{useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table,Button,Row,Col} from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts,deleteProduct, createProduct } from '../actions/productActions'\r\nimport { useNavigate,useParams } from 'react-router-dom'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nimport Paginate from '../components/Paginate'\r\n\r\nconst ProductListScreen = () => {\r\n\r\n    const dispatch=useDispatch()\r\n    const navigate=useNavigate()\r\n    const params=useParams()\r\n    const pageNumber=params.pageNumber || 1\r\n\r\n    const productList=useSelector(state=>state.productList)\r\n    const {loading,error,products,page,pages}=productList\r\n\r\n    const productDelete=useSelector(state=>state.productDelete)\r\n    const {loading:loadingDelete,error:errorDelete,success:successDelete}=productDelete\r\n\r\n    const productCreate=useSelector(state=>state.productCreate)\r\n    const {loading:loadingCreate,error:errorCreate,success:successCreate,product:createdProduct}=productCreate\r\n\r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const {userInfo}=userLogin\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch({type:PRODUCT_CREATE_RESET})\r\n\r\n        if(!userInfo.isAdmin)\r\n            navigate('/login')\r\n        if(successCreate)\r\n            navigate(`/admin/product/${createdProduct._id}/edit`)\r\n        else\r\n            dispatch(listProducts(pageNumber))\r\n        \r\n    },[dispatch,navigate,userInfo,successDelete,successCreate,createdProduct,pageNumber])\r\n\r\n    const deleteHandler=(id)=>{\r\n        if(window.confirm('Are you sure ?'))\r\n        {// DELETE Products}\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler=(product)=>{\r\n        dispatch(createProduct())\r\n    }\r\n  return (\r\n    <>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n            <h1>Products</h1>\r\n            </Col>\r\n            <Col style={{justifyContent:' flex-end',display: 'flex'}}>\r\n                <Button className='my-3' onClick={createProductHandler}>\r\n                    <i className='fas fa-plus'></i> Create Product\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        {loadingDelete && <Loader/>}\r\n        {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n        {loadingCreate && <Loader/>}\r\n        {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n        {loading?<Loader/>:\r\n        error?<Message variant='danger'>{error}</Message>:\r\n        (\r\n        <>\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>PRICE</th>\r\n                        <th>CATEGORY</th>\r\n                        <th>BRAND</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.map((product)=>(\r\n                        <tr key={product._id}>\r\n                            <td>{product._id}</td>\r\n                            <td>{product.name}</td>\r\n                            <td>{product.category}</td>\r\n                            <td>{product.brand}</td>\r\n                            <td>\r\n                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                </LinkContainer>\r\n                                <Button\r\n                                    variant='danger'\r\n                                    className='btn-sm'\r\n                                    onClick={()=>deleteHandler(product._id)}\r\n                                >\r\n                                    <i className='fas fa-trash'></i>\r\n\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n            <Paginate pages={pages} page={page} isAdmin={true}/>\r\n        </>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails,updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match }) => {\r\n\r\n  const navigate=useNavigate()\r\n  const params=useParams()\r\n  const dispatch = useDispatch()\r\n  \r\n  const productId = params.id\r\n  \r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading,setUploading]=useState(false)\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = productUpdate\r\n\r\n  useEffect(() => {\r\n\r\n    if(successUpdate)\r\n    {\r\n        dispatch({type:PRODUCT_UPDATE_RESET})\r\n            navigate('/admin/productlist')\r\n    }\r\n    else{\r\n        if (!product.name || product._id !==productId)\r\n            dispatch(listProductDetails(productId))\r\n        else {\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setBrand(product.brand)\r\n            setCategory(product.category)\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n        }\r\n    }\r\n    \r\n\r\n     \r\n  }, [dispatch, navigate, productId,product,successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            updateProduct({\r\n                _id:productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock\r\n            })\r\n        )     \r\n  }\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader/>}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                    type='number'\r\n                    placeholder='Enter price'\r\n                    value={price}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n           \r\n\r\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                <Form.Label>Input File</Form.Label>\r\n                <Form.Control type=\"file\" onChange={uploadFileHandler}/>\r\n                {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n                <Form.Label>Brand</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter brand'\r\n                    value={brand}\r\n                    onChange={(e) => setBrand(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n            \r\n            <Form.Group controlId='countInStock'>\r\n                <Form.Label>count In Stock</Form.Label>\r\n                <Form.Control\r\n                    type='number'\r\n                    placeholder='Enter countInStock'\r\n                    value={countInStock}\r\n                    onChange={(e) => setCountInStock(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter category'\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n            \r\n            <Form.Group controlId='description'>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter description'\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen","import React,{useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table,Button} from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst OrderListScreen = () => {\r\n\r\n    const dispatch=useDispatch()\r\n    const navigate=useNavigate()\r\n\r\n    const orderList=useSelector(state=>state.orderList)\r\n    const {loading,error,orders}=orderList\r\n\r\n    console.log(orders)\r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const {userInfo}=userLogin\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin)\r\n            dispatch(listOrders())\r\n        else\r\n            navigate('/login')\r\n        \r\n    },[dispatch,navigate,userInfo])\r\n\r\n    \r\n  return (\r\n    <>\r\n        <h1>Orders</h1>\r\n        {loading?<Loader/>:\r\n        error?<Message variant='danger'>{error}</Message>:\r\n        (<Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>USER</th>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {orders.map((order)=>(\r\n                    <tr key={order._id}>\r\n                        <td>{order._id}</td>\r\n                        <td>{order.user && order.user.name}</td>\r\n                        <td>{order.createdAt.substring(0,10)}</td>\r\n                        <td>${order.totalPrice}</td>\r\n                        <td>\r\n                            {order.isPaid ?(\r\n                                order.paidAt.substring(0,10)\r\n                            ):(\r\n                                <i className='fas fa-times' style={{color:'red'}}></i>\r\n                            )}\r\n                        </td>\r\n                        <td>\r\n                            {order.isDelivered ?(\r\n                                order.deliveredAt.substring(0,10)\r\n                            ):(\r\n                                <i className='fas fa-times' style={{color:'red'}}></i>\r\n                            )}\r\n                        </td>\r\n                        <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                            <Button variant='light' className='btn-sm'>\r\n                            Details\r\n                            </Button>\r\n                        </LinkContainer>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table>)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import './App.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport  CartScreen  from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentScreen from './screens/PaymentScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport ProductListScreen from './screens/ProductListScreen';\r\nimport ProductEditScreen from './screens/ProductEditScreen';\r\nimport OrderListScreen from './screens/OrderListScreen';\r\n\r\nconst App=()=> {\r\n  return (\r\n    <BrowserRouter>\r\n    <Header/>\r\n    <main className=\"py-3\">\r\n      <Container>\r\n      <Routes>\r\n      <Route  path='/order/:id' element={<OrderScreen/>}/>\r\n        <Route  path='/shipping' element={<ShippingScreen/>}/>\r\n        <Route  path='/payment' element={<PaymentScreen/>}/>\r\n        <Route  path='/placeorder' element={<PlaceOrderScreen/>}/>\r\n        <Route  path='/login' element={<LoginScreen/>}/>\r\n        <Route  path='/register' element={<RegisterScreen/>}/>\r\n        <Route  path='/profile' element={<ProfileScreen/>}/>\r\n        <Route  path='/product/:id' element={<ProductScreen/>}/>\r\n        <Route path='/cart' element={<CartScreen/>}/>\r\n        <Route path='/cart/:id' element={<CartScreen/>}/>\r\n        <Route path='/admin/userlist' element={<UserListScreen/>}/>\r\n        <Route path='/admin/user/:id/edit' element={<UserEditScreen/>}/>\r\n        <Route path='/admin/productlist' element={<ProductListScreen/>} exact/>\r\n        <Route path='/admin/productlist/:pageNumber' element={<ProductListScreen/>} exact/>\r\n        <Route path='/admin/product/:id/edit' element={<ProductEditScreen/>}/>\r\n        <Route path='/admin/orderlist' element={<OrderListScreen/>}/>\r\n        <Route path='/page/:pageNumber' element={<HomeScreen/>} exact/>\r\n        <Route exact path='/' element={<HomeScreen/>} />\r\n        </Routes>\r\n      </Container>\r\n      </main>\r\n    <Footer/>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//importing redux and store\nimport {Provider } from 'react-redux'\nimport store from './store.js'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}